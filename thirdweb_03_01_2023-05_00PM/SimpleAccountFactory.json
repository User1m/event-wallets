{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract SimpleAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "contract SimpleAccount",
          "name": "ret",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/interfaces/draft-IERC1822.sol",
    "1": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "10": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Strings.sol",
    "11": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/cryptography/ECDSA.sol",
    "12": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/math/Math.sol",
    "13": "contracts/core/BaseAccount.sol",
    "15": "contracts/interfaces/IAccount.sol",
    "16": "contracts/interfaces/IAggregator.sol",
    "17": "contracts/interfaces/IEntryPoint.sol",
    "18": "contracts/interfaces/IStakeManager.sol",
    "19": "contracts/interfaces/UserOperation.sol",
    "2": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
    "20": "contracts/samples/SimpleAccount.sol",
    "21": "contracts/samples/SimpleAccountFactory.sol",
    "3": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/proxy/Proxy.sol",
    "4": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/proxy/beacon/IBeacon.sol",
    "5": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/proxy/utils/Initializable.sol",
    "6": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/proxy/utils/UUPSUpgradeable.sol",
    "7": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Address.sol",
    "8": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Create2.sol",
    "9": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/StorageSlot.sol"
  },
  "ast": {
    "absolutePath": "contracts/samples/SimpleAccountFactory.sol",
    "exportedSymbols": {
      "Address": [
        2259
      ],
      "BaseAccount": [
        1588
      ],
      "Create2": [
        1706
      ],
      "ECDSA": [
        1451
      ],
      "ERC1967Proxy": [
        1625
      ],
      "ERC1967Upgrade": [
        2587
      ],
      "IAccount": [
        3007
      ],
      "IAggregator": [
        3093
      ],
      "IBeacon": [
        3338
      ],
      "IERC1822Proxiable": [
        2269
      ],
      "IEntryPoint": [
        1929
      ],
      "IStakeManager": [
        3198
      ],
      "Initializable": [
        974
      ],
      "Math": [
        4263
      ],
      "Proxy": [
        3059
      ],
      "SimpleAccount": [
        364
      ],
      "SimpleAccountFactory": [
        496
      ],
      "StorageSlot": [
        3398
      ],
      "Strings": [
        2762
      ],
      "UUPSUpgradeable": [
        1090
      ],
      "UserOperation": [
        3223
      ],
      "UserOperationLib": [
        3328
      ],
      "ValidationData": [
        2771
      ],
      "_intersectTimeRange": [
        2915
      ],
      "_packValidationData": [
        2952,
        2990
      ],
      "_parseValidationData": [
        2830
      ]
    },
    "id": 497,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 366,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:24:21"
      },
      {
        "absolutePath": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "id": 367,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 497,
        "sourceUnit": 1707,
        "src": "62:51:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/hmbem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "id": 368,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 497,
        "sourceUnit": 1626,
        "src": "114:64:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/samples/SimpleAccount.sol",
        "file": "./SimpleAccount.sol",
        "id": 369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 497,
        "sourceUnit": 365,
        "src": "180:29:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleAccountFactory",
        "contractDependencies": [
          364,
          1625
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 370,
          "nodeType": "StructuredDocumentation",
          "src": "211:388:21",
          "text": " A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "id": 496,
        "linearizedBaseContracts": [
          496
        ],
        "name": "SimpleAccountFactory",
        "nameLocation": "609:20:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11464fbe",
            "id": 373,
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "667:21:21",
            "nodeType": "VariableDeclaration",
            "scope": 496,
            "src": "636:52:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleAccount_$364",
              "typeString": "contract SimpleAccount"
            },
            "typeName": {
              "id": 372,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 371,
                "name": "SimpleAccount",
                "nameLocations": [
                  "636:13:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 364,
                "src": "636:13:21"
              },
              "referencedDeclaration": 364,
              "src": "636:13:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleAccount_$364",
                "typeString": "contract SimpleAccount"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "732:71:21",
              "statements": [
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 379,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "742:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$364",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 383,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 376,
                          "src": "784:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$1929",
                            "typeString": "contract IEntryPoint"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$1929",
                            "typeString": "contract IEntryPoint"
                          }
                        ],
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "766:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$1929_$returns$_t_contract$_SimpleAccount_$364_$",
                          "typeString": "function (contract IEntryPoint) returns (contract SimpleAccount)"
                        },
                        "typeName": {
                          "id": 381,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 380,
                            "name": "SimpleAccount",
                            "nameLocations": [
                              "770:13:21"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 364,
                            "src": "770:13:21"
                          },
                          "referencedDeclaration": 364,
                          "src": "770:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleAccount_$364",
                            "typeString": "contract SimpleAccount"
                          }
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "766:30:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$364",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "src": "742:54:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$364",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "742:54:21"
                }
              ]
            },
            "id": 388,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "719:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "707:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$1929",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 374,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "707:11:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1929,
                      "src": "707:11:21"
                    },
                    "referencedDeclaration": 1929,
                    "src": "707:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$1929",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "706:25:21"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:21"
            },
            "scope": 496,
            "src": "695:108:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "1269:391:21",
              "statements": [
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1287:4:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 452,
                      "src": "1279:12:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1279:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 402,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "1305:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 403,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "1312:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 401,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "1294:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) view returns (address)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:23:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1279:38:21"
                },
                {
                  "assignments": [
                    407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 407,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1332:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 452,
                      "src": "1327:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 406,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1327:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 411,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 408,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "1343:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1348:4:21",
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1343:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1353:6:21",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1343:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1327:32:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 412,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "1373:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1373:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 423,
                  "nodeType": "IfStatement",
                  "src": "1369:78:21",
                  "trueBody": {
                    "id": 422,
                    "nodeType": "Block",
                    "src": "1387:60:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 418,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "1430:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1422:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 416,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1422:8:21",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1422:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 415,
                            "name": "SimpleAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "1408:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$364_$",
                              "typeString": "type(contract SimpleAccount)"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1408:28:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleAccount_$364",
                            "typeString": "contract SimpleAccount"
                          }
                        },
                        "functionReturnParameters": 398,
                        "id": 421,
                        "nodeType": "Return",
                        "src": "1401:35:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 424,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "1456:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$364",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 438,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 373,
                                      "src": "1548:21:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SimpleAccount_$364",
                                        "typeString": "contract SimpleAccount"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SimpleAccount_$364",
                                        "typeString": "contract SimpleAccount"
                                      }
                                    ],
                                    "id": 437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1540:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 436,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1540:7:21",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1540:30:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 442,
                                        "name": "SimpleAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 364,
                                        "src": "1603:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$364_$",
                                          "typeString": "type(contract SimpleAccount)"
                                        }
                                      },
                                      "id": 443,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1617:10:21",
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 176,
                                      "src": "1603:24:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function SimpleAccount.initialize(address)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 444,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 391,
                                          "src": "1630:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "id": 445,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1629:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function SimpleAccount.initialize(address)"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 440,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1588:3:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1592:10:21",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1588:14:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 446,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1588:49:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1484:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$1625_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 429,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 428,
                                      "name": "ERC1967Proxy",
                                      "nameLocations": [
                                        "1488:12:21"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1625,
                                      "src": "1488:12:21"
                                    },
                                    "referencedDeclaration": 1625,
                                    "src": "1488:12:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$1625",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 433,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 393,
                                        "src": "1516:4:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 432,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1508:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 431,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1508:7:21",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 434,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1508:13:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "1484:38:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$1625_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1484:167:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$1625",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$1625",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1476:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 426,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1476:8:21",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1476:176:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 425,
                        "name": "SimpleAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "1462:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$364_$",
                          "typeString": "type(contract SimpleAccount)"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1462:191:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$364",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "src": "1456:197:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$364",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:197:21"
                }
              ]
            },
            "documentation": {
              "id": 389,
              "nodeType": "StructuredDocumentation",
              "src": "809:369:21",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "5fbfb9cf",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1192:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1214:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "1206:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1228:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "1220:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:28:21"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1264:3:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "1250:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SimpleAccount_$364",
                    "typeString": "contract SimpleAccount"
                  },
                  "typeName": {
                    "id": 396,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 395,
                      "name": "SimpleAccount",
                      "nameLocations": [
                        "1250:13:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 364,
                      "src": "1250:13:21"
                    },
                    "referencedDeclaration": 364,
                    "src": "1250:13:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$364",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1249:19:21"
            },
            "scope": 496,
            "src": "1183:477:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "1863:322:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 467,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "1911:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1903:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 465,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1903:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1903:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 473,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1625,
                                      "src": "1967:12:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$1625_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$1625_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 472,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "1962:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1962:18:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$1625",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1981:12:21",
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "1962:31:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 480,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 373,
                                        "src": "2051:21:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SimpleAccount_$364",
                                          "typeString": "contract SimpleAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SimpleAccount_$364",
                                          "typeString": "contract SimpleAccount"
                                        }
                                      ],
                                      "id": 479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2043:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 478,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2043:7:21",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2043:30:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 484,
                                          "name": "SimpleAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 364,
                                          "src": "2110:13:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$364_$",
                                            "typeString": "type(contract SimpleAccount)"
                                          }
                                        },
                                        "id": 485,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2124:10:21",
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 176,
                                        "src": "2110:24:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function SimpleAccount.initialize(address)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 486,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 456,
                                            "src": "2137:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "id": 487,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2136:7:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function SimpleAccount.initialize(address)"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 482,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2095:3:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2099:10:21",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "2095:14:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2095:49:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 476,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2011:3:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2015:6:21",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2011:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2011:151:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 470,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1928:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1932:12:21",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "1928:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1928:248:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 469,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1918:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1918:259:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 463,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1706,
                        "src": "1880:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$1706_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1888:14:21",
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1691,
                      "src": "1880:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:298:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 462,
                  "id": 493,
                  "nodeType": "Return",
                  "src": "1873:305:21"
                }
              ]
            },
            "documentation": {
              "id": 454,
              "nodeType": "StructuredDocumentation",
              "src": "1666:114:21",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "8cb84e18",
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1794:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1813:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "1805:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1805:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1827:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "1819:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1804:28:21"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "1854:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1853:9:21"
            },
            "scope": 496,
            "src": "1785:400:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 497,
        "src": "600:1587:21",
        "usedErrors": []
      }
    ],
    "src": "36:2152:21"
  },
  "bytecode": "60a060405234801561001057600080fd5b50604051612f5d380380612f5d83398101604081905261002f91610088565b8060405161003c9061007b565b6001600160a01b039091168152602001604051809103906000f080158015610068573d6000803e3d6000fd5b506001600160a01b0316608052506100b8565b6121f780610d6683390190565b60006020828403121561009a57600080fd5b81516001600160a01b03811681146100b157600080fd5b9392505050565b608051610c866100e060003960008181604b0152818161011401526102580152610c866000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806311464fbe146100465780635fbfb9cf146100965780638cb84e18146100a9575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61006d6100a436600461039d565b6100bc565b61006d6100b736600461039d565b6101ee565b6000806100c984846101ee565b905073ffffffffffffffffffffffffffffffffffffffff81163b80156100f1575090506101e8565b60405173ffffffffffffffffffffffffffffffffffffffff8616602482015284907f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de800000000000000000000000000000000000000000000000000000000179052516101b790610390565b6101c2929190610406565b8190604051809103906000f59050801580156101e2573d6000803e3d6000fd5b50925050505b92915050565b60006103578260001b6040518060200161020790610390565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905273ffffffffffffffffffffffffffffffffffffffff871660248201527f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de800000000000000000000000000000000000000000000000000000000179052905161030093929101610406565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261033c9291602001610474565b6040516020818303038152906040528051906020012061035e565b9392505050565b60006103578383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6107ad806104a483390190565b600080604083850312156103b057600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146103d457600080fd5b946020939093013593505050565b60005b838110156103fd5781810151838201526020016103e5565b50506000910152565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082518060408401526104418160608501602087016103e2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b600083516104868184602088016103e2565b83519083019061049a8183602088016103e2565b0194935050505056fe60806040526040516107ad3803806107ad83398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610786602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b610341806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102e5602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610277565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101fd5782516000036101f65773ffffffffffffffffffffffffffffffffffffffff85163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610207565b610207838361020f565b949350505050565b81511561021f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9190610293565b60005b8381101561026e578181015183820152602001610256565b50506000910152565b60008251610289818460208701610253565b9190910192915050565b60208152600082518060208401526102b2816040850160208701610253565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d398280bba137333875db24d80de95c5d2e77d6166f1fb3b48623d9bc1704e6764736f6c63430008100033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205fd872c8fe7aa025d14fbeffdad513e606ded13dc9d99b6334314df0affa0c4364736f6c6343000810003360c0604052306080523480156200001557600080fd5b50604051620021f7380380620021f7833981016040819052620000389162000118565b6001600160a01b03811660a0526200004f62000056565b506200014a565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000116576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012b57600080fd5b81516001600160a01b03811681146200014357600080fd5b9392505050565b60805160a051612041620001b6600039600081816102660152818161069a0152818161074101528181610b2301528181610e1f0152818161117901526114720152600081816104650152818161051501528181610805015281816108b501526109fe01526120416000f3fe6080604052600436106100e15760003560e01c806352d1902d1161007f578063b0d691fe11610059578063b0d691fe14610257578063b61d27f61461028a578063c399ec88146102aa578063c4d66de8146102bf57600080fd5b806352d1902d146101bd5780638da5cb5b146101d2578063affed0e01461023457600080fd5b80633a871cdd116100bb5780633a871cdd1461014f5780634a58db19146101825780634d44560d1461018a5780634f1ef286146101aa57600080fd5b806313af4035146100ed57806318dfb3c71461010f5780633659cfe61461012f57600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004611afd565b6102df565b005b34801561011b57600080fd5b5061010d61012a366004611b5f565b61032a565b34801561013b57600080fd5b5061010d61014a366004611afd565b61044e565b34801561015b57600080fd5b5061016f61016a366004611bcb565b610653565b6040519081526020015b60405180910390f35b61010d610698565b34801561019657600080fd5b5061010d6101a5366004611c1f565b610737565b61010d6101b8366004611c7a565b6107ee565b3480156101c957600080fd5b5061016f6109e4565b3480156101de57600080fd5b5060015461020f906c01000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610179565b34801561024057600080fd5b506001546bffffffffffffffffffffffff1661016f565b34801561026357600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061020f565b34801561029657600080fd5b5061010d6102a5366004611d5c565b610ad0565b3480156102b657600080fd5b5061016f610b1f565b3480156102cb57600080fd5b5061010d6102da366004611afd565b610bd7565b6102e7610d6a565b6001805473ffffffffffffffffffffffffffffffffffffffff9092166c01000000000000000000000000026bffffffffffffffffffffffff909216919091179055565b610332610e07565b8281146103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b83811015610447576104358585838181106103c0576103c0611de5565b90506020020160208101906103d59190611afd565b60008585858181106103e9576103e9611de5565b90506020028101906103fb9190611e14565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ed892505050565b8061043f81611ea8565b9150506103a3565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610397565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161461062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610397565b61063481610f55565b6040805160008082526020820190925261065091839190610f5d565b50565b600061065d611161565b6106678484611200565b90506106766040850185611e14565b905060000361068857610688846112f2565b610691826113bb565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b15801561072357600080fd5b505af1158015610447573d6000803e3d6000fd5b61073f610d6a565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156107d257600080fd5b505af11580156107e6573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610397565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109287f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146109cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610397565b6109d482610f55565b6109e082826001610f5d565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610aab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610397565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610ad8610e07565b610b19848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ed892505050565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff91909116906370a0823190602401602060405180830381865afa158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd29190611ee0565b905090565b600054610100900460ff1615808015610bf75750600054600160ff909116105b80610c115750303b158015610c11575060005460ff166001145b610c9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610397565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610cfb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610d0482611426565b80156109e057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6001546c01000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffff16331480610d9f57503330145b610e05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610397565b565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480610e7257506001546c01000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffff1633145b610e05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152606401610397565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610f019190611f1d565b60006040518083038185875af1925050503d8060008114610f3e576040519150601f19603f3d011682016040523d82523d6000602084013e610f43565b606091505b50915091508161044757805160208201fd5b610650610d6a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f9557610f90836114be565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561101a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261101791810190611ee0565b60015b6110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610397565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610397565b50610f908383836115c8565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610397565b60008061125a836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506112aa61126d610140860186611e14565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506115ed9050565b6001546c01000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffff9081169116146112e65760019150506112ec565b60009150505b92915050565b600180546020830135916bffffffffffffffffffffffff90911690600061131883611f39565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff1614610650576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6163636f756e743a20696e76616c6964206e6f6e6365000000000000000000006044820152606401610397565b80156106505760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d8060008114610447576040519150601f19603f3d011682016040523d82523d6000602084013e610447565b600180546bffffffffffffffffffffffff166c0100000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8481168202929092179283905560405192048116917f0000000000000000000000000000000000000000000000000000000000000000909116907f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de90600090a350565b73ffffffffffffffffffffffffffffffffffffffff81163b611562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610397565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6115d183611611565b6000825111806115de5750805b15610f9057610b19838361165e565b60008060006115fc8585611683565b91509150611609816116c8565b509392505050565b61161a816114be565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606106918383604051806060016040528060278152602001611fe56027913961187b565b60008082516041036116b95760208301516040840151606085015160001a6116ad87828585611900565b945094505050506116c1565b506000905060025b9250929050565b60008160048111156116dc576116dc611f64565b036116e45750565b60018160048111156116f8576116f8611f64565b0361175f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610397565b600281600481111561177357611773611f64565b036117da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610397565b60038160048111156117ee576117ee611f64565b03610650576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610397565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516118a59190611f1d565b600060405180830381855af49150503d80600081146118e0576040519150601f19603f3d011682016040523d82523d6000602084013e6118e5565b606091505b50915091506118f6868383876119ef565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561193757506000905060036119e6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561198b573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166119df576000600192509250506119e6565b9150600090505b94509492505050565b60608315611a85578251600003611a7e5773ffffffffffffffffffffffffffffffffffffffff85163b611a7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610397565b5081611a8f565b611a8f8383611a97565b949350505050565b815115611aa75781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103979190611f93565b73ffffffffffffffffffffffffffffffffffffffff8116811461065057600080fd5b600060208284031215611b0f57600080fd5b813561069181611adb565b60008083601f840112611b2c57600080fd5b50813567ffffffffffffffff811115611b4457600080fd5b6020830191508360208260051b85010111156116c157600080fd5b60008060008060408587031215611b7557600080fd5b843567ffffffffffffffff80821115611b8d57600080fd5b611b9988838901611b1a565b90965094506020870135915080821115611bb257600080fd5b50611bbf87828801611b1a565b95989497509550505050565b600080600060608486031215611be057600080fd5b833567ffffffffffffffff811115611bf757600080fd5b84016101608187031215611c0a57600080fd5b95602085013595506040909401359392505050565b60008060408385031215611c3257600080fd5b8235611c3d81611adb565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215611c8d57600080fd5b8235611c9881611adb565b9150602083013567ffffffffffffffff80821115611cb557600080fd5b818501915085601f830112611cc957600080fd5b813581811115611cdb57611cdb611c4b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611d2157611d21611c4b565b81604052828152886020848701011115611d3a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060608587031215611d7257600080fd5b8435611d7d81611adb565b935060208501359250604085013567ffffffffffffffff80821115611da157600080fd5b818701915087601f830112611db557600080fd5b813581811115611dc457600080fd5b886020828501011115611dd657600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611e4957600080fd5b83018035915067ffffffffffffffff821115611e6457600080fd5b6020019150368190038213156116c157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ed957611ed9611e79565b5060010190565b600060208284031215611ef257600080fd5b5051919050565b60005b83811015611f14578181015183820152602001611efc565b50506000910152565b60008251611f2f818460208701611ef9565b9190910192915050565b60006bffffffffffffffffffffffff808316818103611f5a57611f5a611e79565b6001019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020815260008251806020840152611fb2816040850160208701611ef9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220feca3ab95fa0d6140f31a91ab37b595f159f817ad969402d2eb0edd5e1cbdd8b64736f6c63430008100033",
  "bytecodeSha1": "a9c6dd91bb2b2d74c749166a2da94bf7b9bbcb7b",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 20000
    },
    "version": "0.8.16+commit.07a7930e"
  },
  "contractName": "SimpleAccountFactory",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {
        "SimpleAccountFactory.createAccount": {
          "4": [
            1373,
            1385,
            false
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {
        "SimpleAccountFactory.createAccount": {
          "0": [
            1401,
            1436
          ],
          "1": [
            1456,
            1653
          ]
        },
        "SimpleAccountFactory.getAddress": {
          "2": [
            1873,
            2178
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {
        "Create2.computeAddress": {
          "3": [
            1901,
            1957
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Address",
    "BaseAccount",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Create2",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/ECDSA",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/ERC1967Proxy",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/ERC1967Upgrade",
    "IAccount",
    "IAggregator",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IBeacon",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC1822Proxiable",
    "IEntryPoint",
    "IStakeManager",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Initializable",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Math",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Proxy",
    "SimpleAccount",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/StorageSlot",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Strings",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/UUPSUpgradeable",
    "UserOperationLib"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c806311464fbe146100465780635fbfb9cf146100965780638cb84e18146100a9575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61006d6100a436600461039d565b6100bc565b61006d6100b736600461039d565b6101ee565b6000806100c984846101ee565b905073ffffffffffffffffffffffffffffffffffffffff81163b80156100f1575090506101e8565b60405173ffffffffffffffffffffffffffffffffffffffff8616602482015284907f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de800000000000000000000000000000000000000000000000000000000179052516101b790610390565b6101c2929190610406565b8190604051809103906000f59050801580156101e2573d6000803e3d6000fd5b50925050505b92915050565b60006103578260001b6040518060200161020790610390565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905273ffffffffffffffffffffffffffffffffffffffff871660248201527f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de800000000000000000000000000000000000000000000000000000000179052905161030093929101610406565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261033c9291602001610474565b6040516020818303038152906040528051906020012061035e565b9392505050565b60006103578383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6107ad806104a483390190565b600080604083850312156103b057600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146103d457600080fd5b946020939093013593505050565b60005b838110156103fd5781810151838201526020016103e5565b50506000910152565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082518060408401526104418160608501602087016103e2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b600083516104868184602088016103e2565b83519083019061049a8183602088016103e2565b0194935050505056fe60806040526040516107ad3803806107ad83398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610786602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b610341806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102e5602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610277565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101fd5782516000036101f65773ffffffffffffffffffffffffffffffffffffffff85163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610207565b610207838361020f565b949350505050565b81511561021f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9190610293565b60005b8381101561026e578181015183820152602001610256565b50506000910152565b60008251610289818460208701610253565b9190910192915050565b60208152600082518060208401526102b2816040850160208701610253565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d398280bba137333875db24d80de95c5d2e77d6166f1fb3b48623d9bc1704e6764736f6c63430008100033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205fd872c8fe7aa025d14fbeffdad513e606ded13dc9d99b6334314df0affa0c4364736f6c63430008100033",
  "deployedSourceMap": "600:1587:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:52;;;;;;;;219:42:25;207:55;;;189:74;;177:2;162:18;636:52:21;;;;;;;1183:477;;;;;;:::i;:::-;;:::i;1785:400::-;;;;;;:::i;:::-;;:::i;1183:477::-;1250:17;1279:12;1294:23;1305:5;1312:4;1294:10;:23::i;:::-;1279:38;-1:-1:-1;1343:16:21;;;;1373:12;;1369:78;;-1:-1:-1;1430:4:21;-1:-1:-1;1401:35:21;;1369:78;1588:49;;219:42:25;207:55;;1588:49:21;;;189:74:25;1516:4:21;;1548:21;;162:18:25;;1588:49:21;;;;;;;;;;;;;;;;;;;;;;;;1484:167;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:197;;1269:391;;1183:477;;;;;:::o;1785:400::-;1854:7;1880:298;1911:4;1903:13;;1962:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;219:42:25;207:55;;2095:49:21;;;189:74:25;2051:21:21;;162:18:25;;2095:49:21;;;;;;;;;;;;;;;;;;;;;;;;;2011:151;;;;;2095:49;2011:151;;:::i;:::-;;;;;;;;;;;;;;;1928:248;;;2011:151;1928:248;;:::i;:::-;;;;;;;;;;;;;1918:259;;;;;;1880:22;:298::i;:::-;1873:305;1785:400;-1:-1:-1;;;1785:400:21:o;1799:165:8:-;1882:7;1908:49;1923:4;1929:12;1951:4;2338:12;2445:4;2439:11;3664:12;3657:4;3652:3;3648:14;3641:36;3713:4;3706;3701:3;3697:14;3690:28;3743:8;3738:3;3731:21;3836:4;3831:3;3827:14;3814:27;;3947:4;3940:5;3932:20;3990:2;3973:20;;;2207:1802;-1:-1:-1;;;;2207:1802:8:o;-1:-1:-1:-;;;;;;;;:::o;274:377:25:-;342:6;350;403:2;391:9;382:7;378:23;374:32;371:52;;;419:1;416;409:12;371:52;458:9;445:23;508:42;501:5;497:54;490:5;487:65;477:93;;566:1;563;556:12;477:93;589:5;641:2;626:18;;;;613:32;;-1:-1:-1;;;274:377:25:o;887:250::-;972:1;982:113;996:6;993:1;990:13;982:113;;;1072:11;;;1066:18;1053:11;;;1046:39;1018:2;1011:10;982:113;;;-1:-1:-1;;1129:1:25;1111:16;;1104:27;887:250::o;1142:573::-;1329:42;1321:6;1317:55;1306:9;1299:74;1409:2;1404;1393:9;1389:18;1382:30;1280:4;1441:6;1435:13;1484:6;1479:2;1468:9;1464:18;1457:34;1500:79;1572:6;1567:2;1556:9;1552:18;1547:2;1539:6;1535:15;1500:79;:::i;:::-;1631:2;1619:15;1636:66;1615:88;1600:104;;;;1706:2;1596:113;;1142:573;-1:-1:-1;;;1142:573:25:o;1720:492::-;1895:3;1933:6;1927:13;1949:66;2008:6;2003:3;1996:4;1988:6;1984:17;1949:66;:::i;:::-;2078:13;;2037:16;;;;2100:70;2078:13;2037:16;2147:4;2135:17;;2100:70;:::i;:::-;2186:20;;1720:492;-1:-1:-1;;;;1720:492:25:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "createAccount(address,uint256)": {
        "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
      },
      "getAddress(address,uint256)": {
        "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
      }
    },
    "notice": "A sample factory contract for SimpleAccount A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.",
    "version": 1
  },
  "offset": [
    600,
    2187
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11464FBE EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D PUSH2 0xA4 CALLDATASIZE PUSH1 0x4 PUSH2 0x39D JUMP JUMPDEST PUSH2 0xBC JUMP JUMPDEST PUSH2 0x6D PUSH2 0xB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x39D JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9 DUP5 DUP5 PUSH2 0x1EE JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE DUP1 ISZERO PUSH2 0xF1 JUMPI POP SWAP1 POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE DUP5 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH2 0x1B7 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x1C2 SWAP3 SWAP2 SWAP1 PUSH2 0x406 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357 DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x207 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD PUSH2 0x300 SWAP4 SWAP3 SWAP2 ADD PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x33C SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x35E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357 DUP4 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD SWAP1 POP PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x7AD DUP1 PUSH2 0x4A4 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3E5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x441 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x486 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x3E2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x49A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x3E2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7AD CODESIZE SUB DUP1 PUSH2 0x7AD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x436 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x786 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEA DUP2 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x188 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x231 PUSH1 0x20 SHL PUSH2 0x71 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x218 DUP7 DUP4 DUP4 DUP8 PUSH2 0x234 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST POP DUP2 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2AD DUP4 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2C5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x422 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x341 DUP1 PUSH2 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E5 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x158 DUP7 DUP4 DUP4 DUP8 PUSH2 0x162 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1F6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 DUP4 DUP4 PUSH2 0x20F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x21F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x289 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220D39828 SIGNEXTEND 0xBA SGT PUSH20 0x33875DB24D80DE95C5D2E77D6166F1FB3B48623D SWAP12 0xC1 PUSH17 0x4E6764736F6C6343000810003341646472 PUSH6 0x73733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212205F 0xD8 PUSH19 0xC8FE7AA025D14FBEFFDAD513E606DED13DC9D9 SWAP12 PUSH4 0x34314DF0 0xAF STATICCALL 0xC NUMBER PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        600,
        2187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "6": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "DUP1",
      "path": "21"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "REVERT",
      "path": "21"
    },
    "16": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "17": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "POP",
      "path": "21"
    },
    "18": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "21": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "LT",
      "path": "21"
    },
    "22": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "26": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "29": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "SHR",
      "path": "21"
    },
    "32": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "DUP1",
      "path": "21"
    },
    "33": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x11464FBE"
    },
    "38": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "EQ",
      "path": "21"
    },
    "39": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "43": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "DUP1",
      "path": "21"
    },
    "44": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x5FBFB9CF"
    },
    "49": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "EQ",
      "path": "21"
    },
    "50": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x96"
    },
    "53": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "54": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "DUP1",
      "path": "21"
    },
    "55": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x8CB84E18"
    },
    "60": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "EQ",
      "path": "21"
    },
    "61": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xA9"
    },
    "64": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "65": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "66": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "DUP1",
      "path": "21"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        600,
        2187
      ],
      "op": "REVERT",
      "path": "21"
    },
    "70": {
      "offset": [
        636,
        688
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "71": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6D"
    },
    "74": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x0"
    },
    "107": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "DUP2",
      "path": "21"
    },
    "108": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "JUMP",
      "path": "21"
    },
    "109": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "110": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "112": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "113": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "134": {
      "op": "SWAP1"
    },
    "135": {
      "op": "SWAP2"
    },
    "136": {
      "op": "AND"
    },
    "137": {
      "op": "DUP2"
    },
    "138": {
      "op": "MSTORE"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "141": {
      "op": "ADD"
    },
    "142": {
      "offset": [
        636,
        688
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "144": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "145": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "DUP1",
      "path": "21"
    },
    "146": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "147": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "SUB",
      "path": "21"
    },
    "148": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "149": {
      "fn": null,
      "offset": [
        636,
        688
      ],
      "op": "RETURN",
      "path": "21"
    },
    "150": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "151": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6D"
    },
    "154": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xA4"
    },
    "157": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "158": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "160": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x39D"
    },
    "163": {
      "fn": "SimpleAccountFactory.createAccount",
      "jump": "i",
      "offset": [
        1183,
        1660
      ],
      "op": "JUMP",
      "path": "21"
    },
    "164": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "165": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xBC"
    },
    "168": {
      "fn": "SimpleAccountFactory.createAccount",
      "jump": "i",
      "offset": [
        1183,
        1660
      ],
      "op": "JUMP",
      "path": "21"
    },
    "169": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "170": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6D"
    },
    "173": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB7"
    },
    "176": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "177": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "179": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x39D"
    },
    "182": {
      "fn": "SimpleAccountFactory.getAddress",
      "jump": "i",
      "offset": [
        1785,
        2185
      ],
      "op": "JUMP",
      "path": "21"
    },
    "183": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "184": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1EE"
    },
    "187": {
      "fn": "SimpleAccountFactory.getAddress",
      "jump": "i",
      "offset": [
        1785,
        2185
      ],
      "op": "JUMP",
      "path": "21"
    },
    "188": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "189": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1250,
        1267
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "191": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1279,
        1291
      ],
      "op": "DUP1",
      "path": "21"
    },
    "192": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1294,
        1317
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC9"
    },
    "195": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1305,
        1310
      ],
      "op": "DUP5",
      "path": "21"
    },
    "196": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1312,
        1316
      ],
      "op": "DUP5",
      "path": "21"
    },
    "197": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1294,
        1304
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1EE"
    },
    "200": {
      "fn": "SimpleAccountFactory.createAccount",
      "jump": "i",
      "offset": [
        1294,
        1317
      ],
      "op": "JUMP",
      "path": "21"
    },
    "201": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1294,
        1317
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "202": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1279,
        1317
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "203": {
      "op": "POP"
    },
    "204": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1343,
        1359
      ],
      "op": "PUSH20",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "225": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1343,
        1359
      ],
      "op": "DUP2",
      "path": "21"
    },
    "226": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1343,
        1359
      ],
      "op": "AND",
      "path": "21"
    },
    "227": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1343,
        1359
      ],
      "op": "EXTCODESIZE",
      "path": "21"
    },
    "228": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1373,
        1385
      ],
      "op": "DUP1",
      "path": "21"
    },
    "229": {
      "branch": 4,
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1373,
        1385
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "230": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1369,
        1447
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xF1"
    },
    "233": {
      "branch": 4,
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1369,
        1447
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "234": {
      "op": "POP"
    },
    "235": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1430,
        1434
      ],
      "op": "SWAP1",
      "path": "21",
      "statement": 0
    },
    "236": {
      "op": "POP"
    },
    "237": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1401,
        1436
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E8"
    },
    "240": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1401,
        1436
      ],
      "op": "JUMP",
      "path": "21"
    },
    "241": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1369,
        1447
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "242": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 1,
      "value": "0x40"
    },
    "244": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "245": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "266": {
      "op": "DUP7"
    },
    "267": {
      "op": "AND"
    },
    "268": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x24"
    },
    "270": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "DUP3",
      "path": "21"
    },
    "271": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "ADD",
      "path": "21"
    },
    "272": {
      "op": "MSTORE"
    },
    "273": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1516,
        1520
      ],
      "op": "DUP5",
      "path": "21"
    },
    "274": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1516,
        1520
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "275": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1548,
        1569
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x0"
    },
    "308": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1548,
        1569
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "314": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "DUP1",
      "path": "21"
    },
    "315": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "316": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
    },
    "349": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "DUP2",
      "path": "21"
    },
    "350": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "DUP5",
      "path": "21"
    },
    "351": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "SUB",
      "path": "21"
    },
    "352": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "ADD",
      "path": "21"
    },
    "353": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "DUP2",
      "path": "21"
    },
    "354": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "355": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "356": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "DUP2",
      "path": "21"
    },
    "357": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "358": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "360": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "DUP3",
      "path": "21"
    },
    "361": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "ADD",
      "path": "21"
    },
    "362": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "DUP1",
      "path": "21"
    },
    "363": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "364": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "PUSH28",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "393": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "AND",
      "path": "21"
    },
    "394": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xC4D66DE800000000000000000000000000000000000000000000000000000000"
    },
    "427": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "OR",
      "path": "21"
    },
    "428": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "429": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1588,
        1637
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "430": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "431": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B7"
    },
    "434": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "435": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x390"
    },
    "438": {
      "fn": "SimpleAccountFactory.createAccount",
      "jump": "i",
      "offset": [
        1484,
        1651
      ],
      "op": "JUMP",
      "path": "21"
    },
    "439": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "440": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1C2"
    },
    "443": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "444": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "445": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "446": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x406"
    },
    "449": {
      "fn": "SimpleAccountFactory.createAccount",
      "jump": "i",
      "offset": [
        1484,
        1651
      ],
      "op": "JUMP",
      "path": "21"
    },
    "450": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "451": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "DUP2",
      "path": "21"
    },
    "452": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "453": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "455": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "456": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "DUP1",
      "path": "21"
    },
    "457": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "458": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SUB",
      "path": "21"
    },
    "459": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "460": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "462": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "CREATE2",
      "path": "21"
    },
    "463": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "464": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "POP",
      "path": "21"
    },
    "465": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "DUP1",
      "path": "21"
    },
    "466": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "467": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "DUP1",
      "path": "21"
    },
    "468": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "469": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E2"
    },
    "472": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "473": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "474": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "476": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "DUP1",
      "path": "21"
    },
    "477": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "478": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "479": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "481": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "REVERT",
      "path": "21"
    },
    "482": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "483": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1484,
        1651
      ],
      "op": "POP",
      "path": "21"
    },
    "484": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1456,
        1653
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "485": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1456,
        1653
      ],
      "op": "POP",
      "path": "21"
    },
    "486": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1269,
        1660
      ],
      "op": "POP",
      "path": "21"
    },
    "487": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1269,
        1660
      ],
      "op": "POP",
      "path": "21"
    },
    "488": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "489": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "490": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "491": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "POP",
      "path": "21"
    },
    "492": {
      "fn": "SimpleAccountFactory.createAccount",
      "offset": [
        1183,
        1660
      ],
      "op": "POP",
      "path": "21"
    },
    "493": {
      "fn": "SimpleAccountFactory.createAccount",
      "jump": "o",
      "offset": [
        1183,
        1660
      ],
      "op": "JUMP",
      "path": "21"
    },
    "494": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "495": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1854,
        1861
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "497": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1880,
        2178
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 2,
      "value": "0x357"
    },
    "500": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1911,
        1915
      ],
      "op": "DUP3",
      "path": "21"
    },
    "501": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1903,
        1916
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "503": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1903,
        1916
      ],
      "op": "SHL",
      "path": "21"
    },
    "504": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "506": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "507": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "DUP1",
      "path": "21"
    },
    "508": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "510": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "ADD",
      "path": "21"
    },
    "511": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x207"
    },
    "514": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "515": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x390"
    },
    "518": {
      "fn": "SimpleAccountFactory.getAddress",
      "jump": "i",
      "offset": [
        1962,
        1993
      ],
      "op": "JUMP",
      "path": "21"
    },
    "519": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "520": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
    },
    "553": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "DUP3",
      "path": "21"
    },
    "554": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "DUP3",
      "path": "21"
    },
    "555": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "SUB",
      "path": "21"
    },
    "556": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "DUP2",
      "path": "21"
    },
    "557": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "ADD",
      "path": "21"
    },
    "558": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "DUP4",
      "path": "21"
    },
    "559": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "560": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "562": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "563": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "564": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "ADD",
      "path": "21"
    },
    "565": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "AND",
      "path": "21"
    },
    "566": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "568": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "DUP2",
      "path": "21"
    },
    "569": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "570": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1962,
        1993
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "571": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "592": {
      "op": "DUP8"
    },
    "593": {
      "op": "AND"
    },
    "594": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x24"
    },
    "596": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP3",
      "path": "21"
    },
    "597": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "ADD",
      "path": "21"
    },
    "598": {
      "op": "MSTORE"
    },
    "599": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2051,
        2072
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x0"
    },
    "632": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2051,
        2072
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "638": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP1",
      "path": "21"
    },
    "639": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "640": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
    },
    "673": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP2",
      "path": "21"
    },
    "674": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP5",
      "path": "21"
    },
    "675": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "SUB",
      "path": "21"
    },
    "676": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "ADD",
      "path": "21"
    },
    "677": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP2",
      "path": "21"
    },
    "678": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "679": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "680": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP2",
      "path": "21"
    },
    "681": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "682": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "684": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP1",
      "path": "21"
    },
    "685": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP4",
      "path": "21"
    },
    "686": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "ADD",
      "path": "21"
    },
    "687": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "DUP1",
      "path": "21"
    },
    "688": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "689": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "PUSH28",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "718": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "AND",
      "path": "21"
    },
    "719": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xC4D66DE800000000000000000000000000000000000000000000000000000000"
    },
    "752": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "OR",
      "path": "21"
    },
    "753": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "754": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "755": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "756": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "757": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x300"
    },
    "760": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "761": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "762": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2095,
        2144
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "763": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "ADD",
      "path": "21"
    },
    "764": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x406"
    },
    "767": {
      "fn": "SimpleAccountFactory.getAddress",
      "jump": "i",
      "offset": [
        2011,
        2162
      ],
      "op": "JUMP",
      "path": "21"
    },
    "768": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "769": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "771": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "DUP1",
      "path": "21"
    },
    "772": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "773": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
    },
    "806": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "DUP2",
      "path": "21"
    },
    "807": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "DUP5",
      "path": "21"
    },
    "808": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "SUB",
      "path": "21"
    },
    "809": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "ADD",
      "path": "21"
    },
    "810": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "DUP2",
      "path": "21"
    },
    "811": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "812": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "813": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "DUP3",
      "path": "21"
    },
    "814": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "815": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "816": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x33C"
    },
    "819": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "820": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "821": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        2011,
        2162
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "823": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "ADD",
      "path": "21"
    },
    "824": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x474"
    },
    "827": {
      "fn": "SimpleAccountFactory.getAddress",
      "jump": "i",
      "offset": [
        1928,
        2176
      ],
      "op": "JUMP",
      "path": "21"
    },
    "828": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "829": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "831": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "832": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "834": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "DUP2",
      "path": "21"
    },
    "835": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "DUP4",
      "path": "21"
    },
    "836": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "SUB",
      "path": "21"
    },
    "837": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "SUB",
      "path": "21"
    },
    "838": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "DUP2",
      "path": "21"
    },
    "839": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "840": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "841": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "843": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1928,
        2176
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "844": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1918,
        2177
      ],
      "op": "DUP1",
      "path": "21"
    },
    "845": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1918,
        2177
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "846": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1918,
        2177
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "847": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1918,
        2177
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "849": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1918,
        2177
      ],
      "op": "ADD",
      "path": "21"
    },
    "850": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1918,
        2177
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "851": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1880,
        1902
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x35E"
    },
    "854": {
      "fn": "SimpleAccountFactory.getAddress",
      "jump": "i",
      "offset": [
        1880,
        2178
      ],
      "op": "JUMP",
      "path": "21"
    },
    "855": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1880,
        2178
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "856": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1873,
        2178
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "857": {
      "fn": "SimpleAccountFactory.getAddress",
      "offset": [
        1785,
        2185
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "fn": "SimpleAccountFactory.getAddress",
      "jump": "o",
      "offset": [
        1785,
        2185
      ],
      "op": "JUMP",
      "path": "21"
    },
    "862": {
      "fn": "Create2.computeAddress",
      "offset": [
        1799,
        1964
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "863": {
      "fn": "Create2.computeAddress",
      "offset": [
        1882,
        1889
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "865": {
      "fn": "Create2.computeAddress",
      "offset": [
        1908,
        1957
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 3,
      "value": "0x357"
    },
    "868": {
      "fn": "Create2.computeAddress",
      "offset": [
        1923,
        1927
      ],
      "op": "DUP4",
      "path": "8"
    },
    "869": {
      "fn": "Create2.computeAddress",
      "offset": [
        1929,
        1941
      ],
      "op": "DUP4",
      "path": "8"
    },
    "870": {
      "fn": "Create2.computeAddress",
      "offset": [
        1951,
        1955
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "871": {
      "fn": "Create2.computeAddress",
      "offset": [
        2338,
        2350
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "873": {
      "fn": "Create2.computeAddress",
      "offset": [
        2445,
        2449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "875": {
      "fn": "Create2.computeAddress",
      "offset": [
        2439,
        2450
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "876": {
      "fn": "Create2.computeAddress",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP4",
      "path": "8"
    },
    "877": {
      "fn": "Create2.computeAddress",
      "offset": [
        3657,
        3661
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "879": {
      "fn": "Create2.computeAddress",
      "offset": [
        3652,
        3655
      ],
      "op": "DUP3",
      "path": "8"
    },
    "880": {
      "fn": "Create2.computeAddress",
      "offset": [
        3648,
        3662
      ],
      "op": "ADD",
      "path": "8"
    },
    "881": {
      "fn": "Create2.computeAddress",
      "offset": [
        3641,
        3677
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "882": {
      "fn": "Create2.computeAddress",
      "offset": [
        3713,
        3717
      ],
      "op": "DUP5",
      "path": "8"
    },
    "883": {
      "fn": "Create2.computeAddress",
      "offset": [
        3706,
        3710
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "885": {
      "fn": "Create2.computeAddress",
      "offset": [
        3701,
        3704
      ],
      "op": "DUP3",
      "path": "8"
    },
    "886": {
      "fn": "Create2.computeAddress",
      "offset": [
        3697,
        3711
      ],
      "op": "ADD",
      "path": "8"
    },
    "887": {
      "fn": "Create2.computeAddress",
      "offset": [
        3690,
        3718
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "888": {
      "fn": "Create2.computeAddress",
      "offset": [
        3743,
        3751
      ],
      "op": "DUP3",
      "path": "8"
    },
    "889": {
      "fn": "Create2.computeAddress",
      "offset": [
        3738,
        3741
      ],
      "op": "DUP2",
      "path": "8"
    },
    "890": {
      "fn": "Create2.computeAddress",
      "offset": [
        3731,
        3752
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "891": {
      "fn": "Create2.computeAddress",
      "offset": [
        3836,
        3840
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "893": {
      "fn": "Create2.computeAddress",
      "offset": [
        3831,
        3834
      ],
      "op": "DUP2",
      "path": "8"
    },
    "894": {
      "fn": "Create2.computeAddress",
      "offset": [
        3827,
        3841
      ],
      "op": "ADD",
      "path": "8"
    },
    "895": {
      "fn": "Create2.computeAddress",
      "offset": [
        3814,
        3841
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "896": {
      "fn": "Create2.computeAddress",
      "offset": [
        3814,
        3841
      ],
      "op": "POP",
      "path": "8"
    },
    "897": {
      "fn": "Create2.computeAddress",
      "offset": [
        3947,
        3951
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "899": {
      "fn": "Create2.computeAddress",
      "offset": [
        3940,
        3945
      ],
      "op": "DUP2",
      "path": "8"
    },
    "900": {
      "fn": "Create2.computeAddress",
      "offset": [
        3932,
        3952
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "901": {
      "fn": "Create2.computeAddress",
      "offset": [
        3990,
        3992
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x55"
    },
    "903": {
      "fn": "Create2.computeAddress",
      "offset": [
        3973,
        3993
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "904": {
      "fn": "Create2.computeAddress",
      "offset": [
        3973,
        3993
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "905": {
      "fn": "Create2.computeAddress",
      "offset": [
        3973,
        3993
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "906": {
      "fn": "Create2.computeAddress",
      "offset": [
        2207,
        4009
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "op": "POP"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "op": "POP"
    },
    "911": {
      "fn": "Create2.computeAddress",
      "jump": "o",
      "offset": [
        2207,
        4009
      ],
      "op": "JUMP",
      "path": "8"
    },
    "912": {
      "op": "JUMPDEST"
    },
    "913": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "916": {
      "op": "DUP1"
    },
    "917": {
      "op": "PUSH2",
      "value": "0x4A4"
    },
    "920": {
      "op": "DUP4"
    },
    "921": {
      "op": "CODECOPY"
    },
    "922": {
      "op": "ADD"
    },
    "923": {
      "op": "SWAP1"
    },
    "924": {
      "jump": "o",
      "op": "JUMP"
    },
    "925": {
      "op": "JUMPDEST"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "928": {
      "op": "DUP1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "931": {
      "op": "DUP4"
    },
    "932": {
      "op": "DUP6"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "op": "SLT"
    },
    "935": {
      "op": "ISZERO"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x3B0"
    },
    "939": {
      "op": "JUMPI"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "942": {
      "op": "DUP1"
    },
    "943": {
      "op": "REVERT"
    },
    "944": {
      "op": "JUMPDEST"
    },
    "945": {
      "op": "DUP3"
    },
    "946": {
      "op": "CALLDATALOAD"
    },
    "947": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "968": {
      "op": "DUP2"
    },
    "969": {
      "op": "AND"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "EQ"
    },
    "972": {
      "op": "PUSH2",
      "value": "0x3D4"
    },
    "975": {
      "op": "JUMPI"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "978": {
      "op": "DUP1"
    },
    "979": {
      "op": "REVERT"
    },
    "980": {
      "op": "JUMPDEST"
    },
    "981": {
      "op": "SWAP5"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "984": {
      "op": "SWAP4"
    },
    "985": {
      "op": "SWAP1"
    },
    "986": {
      "op": "SWAP4"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "CALLDATALOAD"
    },
    "989": {
      "op": "SWAP4"
    },
    "990": {
      "op": "POP"
    },
    "991": {
      "op": "POP"
    },
    "992": {
      "op": "POP"
    },
    "993": {
      "jump": "o",
      "op": "JUMP"
    },
    "994": {
      "op": "JUMPDEST"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "997": {
      "op": "JUMPDEST"
    },
    "998": {
      "op": "DUP4"
    },
    "999": {
      "op": "DUP2"
    },
    "1000": {
      "op": "LT"
    },
    "1001": {
      "op": "ISZERO"
    },
    "1002": {
      "op": "PUSH2",
      "value": "0x3FD"
    },
    "1005": {
      "op": "JUMPI"
    },
    "1006": {
      "op": "DUP2"
    },
    "1007": {
      "op": "DUP2"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "op": "MLOAD"
    },
    "1010": {
      "op": "DUP4"
    },
    "1011": {
      "op": "DUP3"
    },
    "1012": {
      "op": "ADD"
    },
    "1013": {
      "op": "MSTORE"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "op": "PUSH2",
      "value": "0x3E5"
    },
    "1020": {
      "op": "JUMP"
    },
    "1021": {
      "op": "JUMPDEST"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1026": {
      "op": "SWAP2"
    },
    "1027": {
      "op": "ADD"
    },
    "1028": {
      "op": "MSTORE"
    },
    "1029": {
      "jump": "o",
      "op": "JUMP"
    },
    "1030": {
      "op": "JUMPDEST"
    },
    "1031": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1052": {
      "op": "DUP4"
    },
    "1053": {
      "op": "AND"
    },
    "1054": {
      "op": "DUP2"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1065": {
      "op": "DUP3"
    },
    "1066": {
      "op": "MLOAD"
    },
    "1067": {
      "op": "DUP1"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1070": {
      "op": "DUP5"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "op": "MSTORE"
    },
    "1073": {
      "op": "PUSH2",
      "value": "0x441"
    },
    "1076": {
      "op": "DUP2"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1079": {
      "op": "DUP6"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1083": {
      "op": "DUP8"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "op": "PUSH2",
      "value": "0x3E2"
    },
    "1088": {
      "jump": "i",
      "op": "JUMP"
    },
    "1089": {
      "op": "JUMPDEST"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "PUSH32",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
    },
    "1126": {
      "op": "AND"
    },
    "1127": {
      "op": "SWAP2"
    },
    "1128": {
      "op": "SWAP1"
    },
    "1129": {
      "op": "SWAP2"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1133": {
      "op": "ADD"
    },
    "1134": {
      "op": "SWAP4"
    },
    "1135": {
      "op": "SWAP3"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "op": "POP"
    },
    "1138": {
      "op": "POP"
    },
    "1139": {
      "jump": "o",
      "op": "JUMP"
    },
    "1140": {
      "op": "JUMPDEST"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1143": {
      "op": "DUP4"
    },
    "1144": {
      "op": "MLOAD"
    },
    "1145": {
      "op": "PUSH2",
      "value": "0x486"
    },
    "1148": {
      "op": "DUP2"
    },
    "1149": {
      "op": "DUP5"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1152": {
      "op": "DUP9"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "op": "PUSH2",
      "value": "0x3E2"
    },
    "1157": {
      "jump": "i",
      "op": "JUMP"
    },
    "1158": {
      "op": "JUMPDEST"
    },
    "1159": {
      "op": "DUP4"
    },
    "1160": {
      "op": "MLOAD"
    },
    "1161": {
      "op": "SWAP1"
    },
    "1162": {
      "op": "DUP4"
    },
    "1163": {
      "op": "ADD"
    },
    "1164": {
      "op": "SWAP1"
    },
    "1165": {
      "op": "PUSH2",
      "value": "0x49A"
    },
    "1168": {
      "op": "DUP2"
    },
    "1169": {
      "op": "DUP4"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1172": {
      "op": "DUP9"
    },
    "1173": {
      "op": "ADD"
    },
    "1174": {
      "op": "PUSH2",
      "value": "0x3E2"
    },
    "1177": {
      "jump": "i",
      "op": "JUMP"
    },
    "1178": {
      "op": "JUMPDEST"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "SWAP5"
    },
    "1181": {
      "op": "SWAP4"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "fdb6b7dbf069e9c00267834fc899b7a02570ebe3",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\n\nimport \"./SimpleAccount.sol\";\n\n/**\n * A sample factory contract for SimpleAccount\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n * The factory's createAccount returns the target account address even if it is already installed.\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\n */\ncontract SimpleAccountFactory {\n    SimpleAccount public immutable accountImplementation;\n\n    constructor(IEntryPoint _entryPoint) {\n        accountImplementation = new SimpleAccount(_entryPoint);\n    }\n\n    /**\n     * create an account, and return its address.\n     * returns the address even if the account is already deployed.\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\n     */\n    function createAccount(address owner,uint256 salt) public returns (SimpleAccount ret) {\n        address addr = getAddress(owner, salt);\n        uint codeSize = addr.code.length;\n        if (codeSize > 0) {\n            return SimpleAccount(payable(addr));\n        }\n        ret = SimpleAccount(payable(new ERC1967Proxy{salt : bytes32(salt)}(\n                address(accountImplementation),\n                abi.encodeCall(SimpleAccount.initialize, (owner))\n            )));\n    }\n\n    /**\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\n     */\n    function getAddress(address owner,uint256 salt) public view returns (address) {\n        return Create2.computeAddress(bytes32(salt), keccak256(abi.encodePacked(\n                type(ERC1967Proxy).creationCode,\n                abi.encode(\n                    address(accountImplementation),\n                    abi.encodeCall(SimpleAccount.initialize, (owner))\n                )\n            )));\n    }\n}\n",
  "sourceMap": "600:1587:21:-:0;;;695:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;784:11;766:30;;;;;:::i;:::-;-1:-1:-1;;;;;513:32:25;;;495:51;;483:2;468:18;766:30:21;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;742:54:21;;;-1:-1:-1;600:1587:21;;;;;;;;;;:::o;14:310:25:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:25;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:25:o;329:223::-;600:1587:21;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/samples/SimpleAccountFactory.sol",
  "type": "contract"
}